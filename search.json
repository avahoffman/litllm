[{"path":"http://www.avahoffman.com/litllm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 litllm authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://www.avahoffman.com/litllm/articles/getting_started.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Getting Started","text":"litllm uses OpenAI API. ‚Äôll need API key internet connection use . ‚ö†Ô∏è OpenAI API costs money. cheap (around $0.60 analyzing 100 pdfs), ‚Äôll need add credits interface. Check API key saved environment: first thing ‚Äôll want locate pdf file(s). Let‚Äôs start one file, ‚Äôll show multiple files. Download file ensure ‚Äôs working directory:","code":"ll_check_api_key() #> Looks like you have a key stored!üéâ #> If you are having issues later, the key could be entered incorrectly or may no longer be active on OpenAI's API interface. download.file(   url = \"https://www.annualreviews.org/docserver/fulltext/genom/25/1/annurev-genom-021623-081639.pdf?expires=1731900753&id=id&accname=guest&checksum=AC39C6258EF7E19E7426CB44F2B37958\",   destfile = \"Taylor_etal.pdf\"   ) list.files(pattern = \"pdf\") #> [1]\"Taylor_etal.pdf\""},{"path":"http://www.avahoffman.com/litllm/articles/getting_started.html","id":"mining-publication-metadata","dir":"Articles","previous_headings":"","what":"Mining Publication Metadata","title":"Getting Started","text":"Let‚Äôs get basic information: title, year, journal name. ‚û° function supports caching, hopefully saves time query costs! can delete relocate cached file rerun scratch.","code":"journal_metadata <- ll_extract_journals(\"Taylor_etal.pdf\") glimpse(journal_metadata) #> Rows: 1 #> Columns: 4 #> $ paper_id <chr> \"Taylor_etal.pdf\" #> $ title    <chr> \"Beyond the Human Genome Project: The Age of Complete Human Genome Sequences and Pangenome References\" #> $ year     <chr> \"2024\" #> $ journal  <chr> \"Annual Review of Genomics and Human Genetics\""},{"path":"http://www.avahoffman.com/litllm/articles/getting_started.html","id":"llms-arent-perfect","dir":"Articles","previous_headings":"Mining Publication Metadata","what":"LLMs Aren‚Äôt perfect!","title":"Getting Started","text":"‚ö†Ô∏è recommend checking data regularly anything doesn‚Äôt make sense. LLMs like ChatGPT can save time, definitely make mistakes. don‚Äôt want end journal entitled ‚ÄúJohns Hopkins University‚Äù!","code":""},{"path":"http://www.avahoffman.com/litllm/articles/getting_started.html","id":"mining-authors-and-institutions","dir":"Articles","previous_headings":"","what":"Mining Authors and Institutions","title":"Getting Started","text":"Let‚Äôs obtain authors institutions. ll_extract_authors() produces tibble column ‚Äúpaper_id‚Äù (file name), ‚Äútitle‚Äù (article title), ‚Äúauth‚Äù (individual author information). author separate row.","code":"authors <- ll_extract_authors(\"Taylor_etal.pdf\") glimpse(authors) #> Rows: 11 #> Columns: 3 #> $ paper_id <chr> \"Taylor_etal.pdf\", \"Taylor_etal.pdf\", \"Taylor_etal.pdf\", \"Ta‚Ä¶ #> $ title    <chr> \"Beyond the Human Genome Project: The Age of Complete Human ‚Ä¶ #> $ auth     <chr> \"Dylan J. Taylor, Department of Biology, Johns Hopkins Unive‚Ä¶ head(authors) #>          paper_id                                                                                                title #> 1 Taylor_etal.pdf Beyond the Human Genome Project: The Age of Complete Human Genome Sequences and Pangenome References #> 2 Taylor_etal.pdf Beyond the Human Genome Project: The Age of Complete Human Genome Sequences and Pangenome References #> 3 Taylor_etal.pdf Beyond the Human Genome Project: The Age of Complete Human Genome Sequences and Pangenome References #> 4 Taylor_etal.pdf Beyond the Human Genome Project: The Age of Complete Human Genome Sequences and Pangenome References #> 5 Taylor_etal.pdf Beyond the Human Genome Project: The Age of Complete Human Genome Sequences and Pangenome References #> 6 Taylor_etal.pdf Beyond the Human Genome Project: The Age of Complete Human Genome Sequences and Pangenome References #>                                                                                                                         auth #> 1                                 Dylan J. Taylor, Department of Biology, Johns Hopkins University, Baltimore, Maryland, USA #> 2                               Jordan M. Eizenga, Genomics Institute, University of California, Santa Cruz, California, USA #> 3                              Qiuhui Li, Department of Computer Science, Johns Hopkins University, Baltimore, Maryland, USA #> 4                               Arun Das, Department of Computer Science, Johns Hopkins University, Baltimore, Maryland, USA #> 5 Katharine M. Jenike, Department of Genetic Medicine, Johns Hopkins University School of Medicine, Baltimore, Maryland, USA #> 6                  Eimear E. Kenny, Institute for Genomic Health, Icahn School of Medicine at Mount Sinai, New York, NY, USA"},{"path":"http://www.avahoffman.com/litllm/articles/getting_started.html","id":"getting-raw-author-data","dir":"Articles","previous_headings":"Mining Authors and Institutions","what":"Getting Raw Author Data","title":"Getting Started","text":"can view data raw format well. ‚û° function supports caching, hopefully saves time query costs! can delete relocate cached file rerun scratch.","code":"authors_raw <- ll_extract_authors(\"Taylor_etal.pdf\", clean_authors = F) authors_raw #> $Taylor_etal.pdf #> [1] \"Title: Beyond the Human Genome Project: The Age of Complete Human Genome Sequences and Pangenome References\\n\\nAuthor(s):\\nDylan J.  #> Taylor, Department of Biology, Johns Hopkins University, Baltimore, Maryland, USA\\nJordan M. Eizenga, Genomics Institute, University of  #> California, Santa Cruz..."},{"path":"http://www.avahoffman.com/litllm/articles/getting_started.html","id":"getting-institution-information","dir":"Articles","previous_headings":"","what":"Getting Institution Information","title":"Getting Started","text":"might interested information institutions. first let‚Äôs limit unique institutions.","code":"distinct_institutions <- unique(authors$inst) #> [1] \"Johns Hopkins University\" #> [2] \"University of California, Santa Cruz\" #> [3] \"Johns Hopkins University School of Medicine\" #> [4] \"Icahn School of Medicine at Mount Sinai\" #> [5] \"Institut de Recherche en Sant√© Digestive, Universit√© de Toulouse, INSERM, INRA, ENVT, UPS\""},{"path":"http://www.avahoffman.com/litllm/articles/getting_started.html","id":"logical-queries-for-institutions","dir":"Articles","previous_headings":"Getting Institution Information","what":"Logical Queries for Institutions","title":"Getting Started","text":"Let‚Äôs see institutions large student body. institutional discriptor can inserted logical_check argument.","code":"is_large <-   ll_check_institution_type(     distinct_institutions,     logical_check = \"an institution with >5000 students\"     ) is_large #> # A tibble: 5 √ó 2 #>   name                                          an_institution_with_‚Ä¶¬π #>   <chr>                                         <chr> #> 1 Johns Hopkins University                      TRUE #> 2 University of California, Santa Cruz          TRUE #> 3 Johns Hopkins University School of Medicine   FALSE #> 4 Icahn School of Medicine at Mount Sinai       FALSE #> 5 Institut de Recherche en Sant√© Digestive, Un‚Ä¶ FALSE #> # ‚Ñπ abbreviated name: ¬π‚Äãan_institution_with_5000_students"},{"path":"http://www.avahoffman.com/litllm/articles/getting_started.html","id":"combining-litllm-data","dir":"Articles","previous_headings":"Getting Institution Information","what":"Combining litllm Data","title":"Getting Started","text":"Join authors build dataset!","code":"authors <- authors %>% left_join(is_large, by = c(\"inst\" = \"name\")) #> Rows: 11 #> Columns: 5 #> $ paper_id                          <chr> \"Taylor_etal.pdf\", \"Taylor_etal.pd‚Ä¶ #> $ title                             <chr> \"Beyond the Human Genome Project: ‚Ä¶ #> $ auth                              <chr> \"Dylan J. Taylor, Department of Bi‚Ä¶ #> $ inst                              <chr> \"Johns Hopkins University\", \"Unive‚Ä¶ #> $ an_institution_with_5000_students <chr> \"TRUE\", \"TRUE\", \"TRUE\", \"TRUE\", \"F‚Ä¶"},{"path":"http://www.avahoffman.com/litllm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ava Hoffman. Author, maintainer.","code":""},{"path":"http://www.avahoffman.com/litllm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hoffman (2025). litllm: Mine Journal Articles Literature Review. R package version 0.1.0, http://www.avahoffman.com/litllm/.","code":"@Manual{,   title = {litllm: Mine Journal Articles for Literature Review},   author = {Ava Hoffman},   year = {2025},   note = {R package version 0.1.0},   url = {http://www.avahoffman.com/litllm/}, }"},{"path":"http://www.avahoffman.com/litllm/index.html","id":"litllm","dir":"","previous_headings":"","what":"Mine Journal Articles for Literature Review","title":"Mine Journal Articles for Literature Review","text":"goal litllm help mine pdfs scholarly analysis.","code":""},{"path":"http://www.avahoffman.com/litllm/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Mine Journal Articles for Literature Review","text":"can install development version litllm GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"avahoffman/litllm\")"},{"path":"http://www.avahoffman.com/litllm/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Mine Journal Articles for Literature Review","text":"Please follow along vignette learn use package: https://www.avahoffman.com/litllm/articles/getting_started.html Please let us know bugs suggestions via GitHub issues.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_check_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for the OpenAI API Key. ‚Äî ll_check_api_key","title":"Check for the OpenAI API Key. ‚Äî ll_check_api_key","text":"Check OpenAI API Key.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_check_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for the OpenAI API Key. ‚Äî ll_check_api_key","text":"","code":"ll_check_api_key()"},{"path":"http://www.avahoffman.com/litllm/reference/ll_check_api_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for the OpenAI API Key. ‚Äî ll_check_api_key","text":"message.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_check_api_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for the OpenAI API Key. ‚Äî ll_check_api_key","text":"","code":"ll_check_api_key() # Lets you know if an API key is correctly stored for next steps #> Error in ll_check_api_key(): No OpenAI API key detected. You'll need to generate one and add it to your R Environment. You can do this by entering `usethis::edit_r_environ()` and adding OPENAI_API_KEY=XXX to a new line."},{"path":"http://www.avahoffman.com/litllm/reference/ll_check_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for internet connection. ‚Äî ll_check_connection","title":"Check for internet connection. ‚Äî ll_check_connection","text":"Check internet connection.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_check_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for internet connection. ‚Äî ll_check_connection","text":"","code":"ll_check_connection()"},{"path":"http://www.avahoffman.com/litllm/reference/ll_check_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for internet connection. ‚Äî ll_check_connection","text":"Stop connection detected","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_check_connection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for internet connection. ‚Äî ll_check_connection","text":"","code":"check_connection() #> Error in check_connection(): could not find function \"check_connection\""},{"path":"http://www.avahoffman.com/litllm/reference/ll_check_file_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if provided value is a file or a directory and return files. ‚Äî ll_check_file_structure","title":"Check if provided value is a file or a directory and return files. ‚Äî ll_check_file_structure","text":"Check provided value file directory return files.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_check_file_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if provided value is a file or a directory and return files. ‚Äî ll_check_file_structure","text":"","code":"ll_check_file_structure(file_path)"},{"path":"http://www.avahoffman.com/litllm/reference/ll_check_file_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if provided value is a file or a directory and return files. ‚Äî ll_check_file_structure","text":"file_path string, single pdf file directory containing pdfs.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_check_file_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if provided value is a file or a directory and return files. ‚Äî ll_check_file_structure","text":"file name(s)","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_clean_authors.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean up authors and title from ll_query-type output. ‚Äî ll_clean_authors","title":"Clean up authors and title from ll_query-type output. ‚Äî ll_clean_authors","text":"Clean authors title ll_query-type output.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_clean_authors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean up authors and title from ll_query-type output. ‚Äî ll_clean_authors","text":"","code":"ll_clean_authors(x)"},{"path":"http://www.avahoffman.com/litllm/reference/ll_clean_authors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean up authors and title from ll_query-type output. ‚Äî ll_clean_authors","text":"x string, whole response ChatGPT","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_clean_authors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean up authors and title from ll_query-type output. ‚Äî ll_clean_authors","text":"dataframe.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_clean_journals.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean up title, year, and journal from ll_query-type output. ‚Äî ll_clean_journals","title":"Clean up title, year, and journal from ll_query-type output. ‚Äî ll_clean_journals","text":"Clean title, year, journal ll_query-type output.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_clean_journals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean up title, year, and journal from ll_query-type output. ‚Äî ll_clean_journals","text":"","code":"ll_clean_journals(x)"},{"path":"http://www.avahoffman.com/litllm/reference/ll_clean_journals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean up title, year, and journal from ll_query-type output. ‚Äî ll_clean_journals","text":"x string, whole response ChatGPT","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_clean_journals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean up title, year, and journal from ll_query-type output. ‚Äî ll_clean_journals","text":"dataframe.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_extract_authors.html","id":null,"dir":"Reference","previous_headings":"","what":"Mine ChatGPT for pdf metadata: Title, Authors, and Institutions. ‚Äî ll_extract_authors","title":"Mine ChatGPT for pdf metadata: Title, Authors, and Institutions. ‚Äî ll_extract_authors","text":"Mine ChatGPT pdf metadata: Title, Authors, Institutions.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_extract_authors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mine ChatGPT for pdf metadata: Title, Authors, and Institutions. ‚Äî ll_extract_authors","text":"","code":"ll_extract_authors(   file_path,   model = \"gpt-4o-mini\",   api_key = Sys.getenv(\"OPENAI_API_KEY\"),   clean_authors = TRUE )"},{"path":"http://www.avahoffman.com/litllm/reference/ll_extract_authors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mine ChatGPT for pdf metadata: Title, Authors, and Institutions. ‚Äî ll_extract_authors","text":"file_path string, single pdf file directory containing pdfs. model string, OpenAI ChatGPT model use. api_key string, API key want supply manually. free one, used minimal model cheap. https://openai.com/api/pricing/. clean_authors logical, whether output cleaned dataframe authors. FALSE, returns raw ChatGPT output. can useful case ChatGPT goes script hallucinates.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_extract_authors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mine ChatGPT for pdf metadata: Title, Authors, and Institutions. ‚Äî ll_extract_authors","text":"dataframe.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_extract_journals.html","id":null,"dir":"Reference","previous_headings":"","what":"Mine ChatGPT for pdf metadata: Title, Year, and Journal. ‚Äî ll_extract_journals","title":"Mine ChatGPT for pdf metadata: Title, Year, and Journal. ‚Äî ll_extract_journals","text":"Mine ChatGPT pdf metadata: Title, Year, Journal.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_extract_journals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mine ChatGPT for pdf metadata: Title, Year, and Journal. ‚Äî ll_extract_journals","text":"","code":"ll_extract_journals(   file_path,   model = \"gpt-4o-mini\",   api_key = Sys.getenv(\"OPENAI_API_KEY\"),   clean_journals = TRUE )"},{"path":"http://www.avahoffman.com/litllm/reference/ll_extract_journals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mine ChatGPT for pdf metadata: Title, Year, and Journal. ‚Äî ll_extract_journals","text":"file_path string, single pdf file directory containing pdfs. model string, OpenAI ChatGPT model use. api_key string, API key want supply manually. free one, used minimal model cheap. https://openai.com/api/pricing/. clean_journals logical, whether output cleaned dataframe journals. FALSE, returns raw ChatGPT output. can useful case ChatGPT goes script hallucinates.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_extract_journals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mine ChatGPT for pdf metadata: Title, Year, and Journal. ‚Äî ll_extract_journals","text":"dataframe.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_find_institution_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform logical checks on a vector of institutions using ChatGPT. ‚Äî ll_find_institution_type","title":"Perform logical checks on a vector of institutions using ChatGPT. ‚Äî ll_find_institution_type","text":"example, might interested checking whether author institutions nonprofit, private company, university.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_find_institution_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform logical checks on a vector of institutions using ChatGPT. ‚Äî ll_find_institution_type","text":"","code":"ll_find_institution_type(   text,   model = \"gpt-4o-mini\",   api_key = Sys.getenv(\"OPENAI_API_KEY\"),   logical_check = \"in the United States\" )"},{"path":"http://www.avahoffman.com/litllm/reference/ll_find_institution_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform logical checks on a vector of institutions using ChatGPT. ‚Äî ll_find_institution_type","text":"text vector strings containing cleaned institutions. might output `ll_pull_institutions`. model string, OpenAI ChatGPT model use. api_key string, API key want supply manually. free one, used minimal model cheap. https://openai.com/api/pricing/. logical_check string, phrase can answered \"Yes\" \"\" combined \"institution...\". example, \"United States\" \"Minority Serving Institution\".","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_find_institution_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform logical checks on a vector of institutions using ChatGPT. ‚Äî ll_find_institution_type","text":"data frame containing T/F data item `text`.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_find_institution_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform logical checks on a vector of institutions using ChatGPT. ‚Äî ll_find_institution_type","text":"","code":"ll_find_institution_type(\"Johns Hopkins University\", logical_check = \"an institution with >5000 students\") #> Johns Hopkins University --- duration: 6 #> # A tibble: 0 √ó 2 #> # ‚Ñπ 2 variables: name <int>, an_institution_with_5000_students <lgl>"},{"path":"http://www.avahoffman.com/litllm/reference/ll_journal_corrections.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove some journal specific stuff. ‚Äî ll_journal_corrections","title":"Remove some journal specific stuff. ‚Äî ll_journal_corrections","text":"Remove journal specific stuff.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_journal_corrections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove some journal specific stuff. ‚Äî ll_journal_corrections","text":"","code":"ll_journal_corrections(x)"},{"path":"http://www.avahoffman.com/litllm/reference/ll_journal_corrections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove some journal specific stuff. ‚Äî ll_journal_corrections","text":"x Collapsed output pdftools needs cleaned ","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_journal_corrections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove some journal specific stuff. ‚Äî ll_journal_corrections","text":"Cleaned string.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_pull_institutions.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract ","title":"Extract ","text":"Extract \"Institutions\" messy vector using ChatGPT.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_pull_institutions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract ","text":"","code":"ll_pull_institutions(   text,   model = \"gpt-4o-mini\",   api_key = Sys.getenv(\"OPENAI_API_KEY\") )"},{"path":"http://www.avahoffman.com/litllm/reference/ll_pull_institutions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract ","text":"text vector strings containing messy data. model string, OpenAI ChatGPT model use. api_key string, API key want supply manually. free one, used minimal model cheap. https://openai.com/api/pricing/.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_pull_institutions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract ","text":"vector containing clean data.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a query against OpenAI's API. ‚Äî ll_query","title":"Perform a query against OpenAI's API. ‚Äî ll_query","text":"See https://openai.com/api/pricing/ information different models.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a query against OpenAI's API. ‚Äî ll_query","text":"","code":"ll_query(   source,   prompt,   model = \"gpt-4o-mini\",   api_key = Sys.getenv(\"OPENAI_API_KEY\") )"},{"path":"http://www.avahoffman.com/litllm/reference/ll_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a query against OpenAI's API. ‚Äî ll_query","text":"source string, either file string text data mined . \"pdf/journal_article.pdf\" \"long string text like query directly\" prompt string, prompt ChatGPT. model string, OpenAI ChatGPT model use. api_key string, API key want supply manually. free one, used minimal model cheap. https://openai.com/api/pricing/.","code":""},{"path":"http://www.avahoffman.com/litllm/reference/ll_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a query against OpenAI's API. ‚Äî ll_query","text":"Raw content API","code":""}]
